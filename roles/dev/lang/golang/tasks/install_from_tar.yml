---

- name: Present install path '{{ pkg_ic.install_path }}'
  file: path="{{ pkg_ic.install_path }}" state=directory
- name: Download {{ pkg_ic.file }}
  cached_get_url:
    cached: "{{ resource_cache }}/{{ pkg_ic.file }}"
    url: "{{ pkg_ic.url }}"
    dest: '{{ pkg_ic.install_path }}/{{ pkg_ic.file }}'

- name: Check unarchived
  stat: path="{{ pkg_ic.install_path }}/{{ pkg_ic.basename }}"
  register: pkg_stat
- name: 'Unarchive package'
  unarchive:
    src: "{{ pkg_ic.install_path }}/{{ pkg_ic.file }}"
    dest: "{{ pkg_ic.install_path }}"
    remote_src: yes
  when: pkg_stat.stat.isdir is not defined
- name: Rename '{{ pkg_ic.basename_from }} -> {{ pkg_ic.basename }}'
  shell: |
    mv {{ pkg_ic.install_path }}/{{ pkg_ic.basename_from }} {{ pkg_ic.install_path }}/{{ pkg_ic.basename }}
  when: (pkg_ic.basename_from|default(none) != none) and (pkg_ic.basename_from|default("") != "" ) and ( pkg_stat.stat.isdir is not defined)

- name: Export GOROOT
  env_edit:
    varlist:
      - GOROOT: '{{ pkg_ic.install_path }}/{{ pkg_ic.basename }}'
      - PATH: $GOROOT/bin/:$PATH
    marker: "{mark} GOROOT BLOCK"
    profile_filename: goroot.sh

- name: Check go installation
  shell: /bin/bash -l -c "go version"
  register: pkg_v
  changed_when: False
  failed_when: "( pkg_v | failed ) or ( pkg_ic.version_expect not in pkg_v.stdout )"
